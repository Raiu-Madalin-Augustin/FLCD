var->(-1, -1)
identifier->(0, 0)
:->(-1, -1)
int->(-1, -1)
;->(-1, -1)
var->(-1, -1)
identifier->(1, 0)
:->(-1, -1)
int->(-1, -1)
;->(-1, -1)
var->(-1, -1)
identifier->(2, 0)
:->(-1, -1)
int->(-1, -1)
;->(-1, -1)
var->(-1, -1)
identifier->(6, 0)
:->(-1, -1)
int->(-1, -1)
=->(-1, -1)
constant->(8, 0)
;->(-1, -1)
Read->(-1, -1)
(->(-1, -1)
identifier->(0, 0)
)->(-1, -1)
;->(-1, -1)
Read->(-1, -1)
(->(-1, -1)
identifier->(1, 0)
)->(-1, -1)
;->(-1, -1)
Read->(-1, -1)
(->(-1, -1)
identifier->(2, 0)
)->(-1, -1)
;->(-1, -1)
Verify->(-1, -1)
(->(-1, -1)
identifier->(0, 0)
>=->(-1, -1)
identifier->(1, 0)
&&->(-1, -1)
identifier->(0, 0)
>=->(-1, -1)
identifier->(2, 0)
)->(-1, -1)
=>->(-1, -1)
{->(-1, -1)
identifier->(6, 0)
=->(-1, -1)
identifier->(0, 0)
;->(-1, -1)
}->(-1, -1)
else->(-1, -1)
Verify->(-1, -1)
(->(-1, -1)
identifier->(1, 0)
>=->(-1, -1)
identifier->(0, 0)
&&->(-1, -1)
identifier->(1, 0)
>=->(-1, -1)
identifier->(2, 0)
)->(-1, -1)
=>->(-1, -1)
{->(-1, -1)
identifier->(6, 0)
=->(-1, -1)
identifier->(1, 0)
;->(-1, -1)
}->(-1, -1)
else->(-1, -1)
=>->(-1, -1)
{->(-1, -1)
identifier->(6, 0)
=->(-1, -1)
identifier->(2, 0)
;->(-1, -1)
}->(-1, -1)
Show->(-1, -1)
(->(-1, -1)
constant->(7, 0)
,->(-1, -1)
identifier->(6, 0)
)->(-1, -1)
;->(-1, -1)
$->(-1, -1)
